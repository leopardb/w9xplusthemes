
style "GtkMenu"
{

######	Style Properties

	## Amount of border space between the menubar shadow and the menu items. (gint)

		#GtkMenuBar::internal-padding = 1

	## Style of bevel around the menubar. (GtkShadowType)

		#GtkMenuBar::shadow-type = GTK_SHADOW_OUT

	## Indicates where scroll arrows should be placed. (GtkArrowPlacement)

		#GtkMenu ::arrow-placement = GTK_ARROWS_BOTH

	## Arbitrary constant to scale down the size of the scroll arrow. (gfloat [0,1])

		#GtkMenu ::arrow-scaling = 0.7

	## When scrolling, always show both arrows. (gboolean)

		#GtkMenu ::double-arrows = 1

	## When the menu is a submenu, position it this number of pixels offset horizontally. (gint)

		#GtkMenu ::horizontal-offset = -2

	## Extra space at the left and right edges of the menu. (gint Allowed values: >= 0)

		#GtkMenu ::horizontal-padding = 0

	## When the menu is a submenu, position it this number of pixels offset vertically. (gint)

		#GtkMenu ::vertical-offset = 0

	## Extra space at the top and bottom of the menu. (gint)

		#GtkMenu ::vertical-padding = 1

######	Colors

	bg[NORMAL]		= @widgets_bg		# widget background
}

class "GtkMenu*"	style "GtkMenu"



style "GtkMenuItem"
{

######	Style Properties

	## Amount of space used up by arrow, relative to the menu item's font size. (gfloat Allowed values: [0,2])

		#GtkMenuItem::arrow-scaling = 0.8

	## Space between label and arrow. (gint Allowed values: >= 0)

		#GtkMenuItem::arrow-spacing = 10

	## Padding to left and right of the menu item. (gint Allowed values: >= 0)

		#GtkMenuItem::horizontal-padding = 3

	## Shadow type when item is selected. (GtkShadowType)

		#GtkMenuItem::selected-shadow-type = GTK_SHADOW_NONE

	## Space between icon and label. (gint Allowed values: >= 0)

		#GtkMenuItem::toggle-spacing = 5

	## The minimum desired width of the menu item in characters. (gint Allowed values: >= 0)

		#GtkMenuItem::width-chars = 12

	## Size of check or radio indicator. (gint Allowed values: >= 0)

		#GtkCheckMenuItem::indicator-size = 13


######	Colors

	fg[NORMAL]		= @text_normal	# expander color
	fg[PRELIGHT]		= @text_focused	# expander color

	bg[NORMAL]		= @widgets_bg	# bg for GtkSeparatorMenuItem and *prelight bg* for Gtk*MenuItem in GtkMenuBar
	bg[PRELIGHT]		= @bg_focused	# bg for prelighted Gtk*MenuItem (except in MenuBar)

	text[NORMAL]		= @text_normal	# check mark in GtkCheckMenuItem and dot in GtkRadioMenuItem

	base[NORMAL]		= @widgets_bg	# dot bg in GtkRadioMenuItem
}

class "Gtk*MenuItem" style "GtkMenuItem"


style "MenuItemLabel"
{
	fg[NORMAL]		= @text_normal
	fg[PRELIGHT]		= @text_focused
	fg[INSENSITIVE]		= @text_insensitive

# Trick to get the same white shadows on insensitive text as MS-windows
	engine "clearlooks" {}

}

widget_class "*.GtkMenu*.Gtk*MenuItem.Gtk*Label" style "MenuItemLabel"

# Tweak for a MS-style : text won't turn white when prelighted in the menu bar...

style "MSMenuBarItemLabel"
{
	fg[NORMAL]		= @text_normal
	fg[PRELIGHT]		= @text_normal
}

widget_class "*.GtkMenuBar.Gtk*MenuItem.Gtk*Label" style "MSMenuBarItemLabel"


style "MSMenuBarThickness"
{

	xthickness = 11
	ythickness = 2
}
class "GtkMenuBar" style "MSMenuBarThickness"

style "MSMenuThickness"
{

	xthickness = 3
	ythickness = 2
}
class "GtkMenu" style "MSMenuThickness"

style "MSMenuItemThickness"
{

	xthickness = 4
	ythickness = 3
}
class "Gtk*MenuItem" style "MSMenuItemThickness"



#class "Gtk*Label" style "thickness"


#class "GtkMenu" style "thickness"
#class "Gtk*MenuItem" style "thickness"

#widget_class "*.GtkMenu*" style "thickness"
#widget_class "*.GtkMenu*.Gtk*MenuItem" style "thickness"













